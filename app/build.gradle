plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-parcelize'
//    id 'com.google.gms.google-services'
}

apply from: '../jacoco/modules.gradle'


android {
    namespace 'com.faran.jetpackapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.faran.jetpackapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            testCoverageEnabled true
        }
    }
    testOptions {
        //execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig  true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    flavorDimensions 'env'
    productFlavors {
        dev {
            dimension 'env'
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            buildConfigField 'String', 'BASE_URL', '"https://jsonplaceholder.typicode.com/"'
        }
        prod {
            dimension 'env'
            buildConfigField 'String', 'BASE_URL', '"https://jsonplaceholder.typicode.com/"'
        }
    }
}

dependencies {

    def mockitoVersion = '4.6.1'
    def mockitoInLineVersion = '3.11.2'
    def mockitoAndroidVersion = '2.25.0'
    // This need to be validated. Risk and maintenance
    def mockitokotlinNhaarmanVersion = '2.2.0'

    def coroutinesVersion = '1.7.0'

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.navigation:navigation-compose:2.6.0'


    //Di
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //OKHttp
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    //Moshi
    implementation "com.squareup.moshi:moshi:1.14.0"
    implementation "com.squareup.moshi:moshi-adapters:1.14.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.14.0"

    //Moshi tools
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    //coil - image loader
    implementation 'io.coil-kt:coil-compose:2.2.2'

    //Firebase
//    implementation platform('com.google.firebase:firebase-bom:32.1.1')
//    implementation 'com.google.firebase:firebase-analytics-ktx'


    //Mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlinNhaarmanVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInLineVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroidVersion"

    // For instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.46.1'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    kaptTest 'com.google.dagger:hilt-compiler:2.46.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.8.0"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:1.8.20"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
}